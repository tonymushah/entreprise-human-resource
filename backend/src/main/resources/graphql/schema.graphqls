scalar Date @specifiedBy(url: "https://tools.ietf.org/html/rfc3339")

scalar UUID @specifiedBy(url: "https://tools.ietf.org/html/rfc4122")

scalar Address

scalar Email

"""
  TODO Types
"""

# [x] utilities for candidat Experience

# Experience
type Entreprise {
  id: UUID!
  name: String!
  address: Address
}

type ExperienceType{
  id: UUID!
  name: String!
}

type Experience {
  id: UUID!
  origin: Entreprise!
  genre: ExperienceType!
  start: Date!
  end: Date
  proof: String!
}

# [x] utilities for candidat Diplome

## For Diplome
type DilplomeType {
  id: UUID!
  name: String!
}

type Ecole {
  id: UUID!
  name: String!
  address: Address
}

type Specialite {
  id: UUID!
  name: String!
}

type Diplome {
  id: UUID!
  origin: Ecole!
  diplomeType: DilplomeType!
  specilite: Specialite
  file: String!
}

# [x] utilities for candidat

## Candidat Genre
type Genre {
  id: UUID!
  nom: String!
}

type SituationMatrimonial {
  id: UUID!
  name: String!
}

type Candidat {
  id: UUID!
  nom: String!
  prenom: String!
  genre: Genre!
  dateNaissance: Date!
  email: Email!
  telephone: String!
  situation: SituationMatrimonial!
  diplomes(pagination: Pagination): [Diplome]!
  experience(pagination: Pagination): [Experience]!
  enfants: Int
}

# [x] utilities for service critary

## For 
type Question {
  id: UUID!
  question: String!
  choices: [String!]!
}

type ExpExigence{
  id: UUID!
  duration: Int
  type: ExperienceType
  entreprise: Entreprise
}

type Critary {
  id: UUID!
  genre: [Genre!]
  situationMatri: [SituationMatrimonial!]!
  questions: [Question!]!
}

## [x] actual service himself 

type Service {
  id: UUID!
  nom: String!
  annonces(pagination: Pagination, onlyValid: Boolean): [AnnonceService]!
}

## [x] candidature

type Candidature{
  id: UUID!
  owner: Candidat!
  isValid: Boolean
  annonce: AnnonceService!
}

## [x] the ad generated by the App

type AnnonceService {
  id: UUID!
  title: String
  limitDate: Date!
  addDate: Date!
  service: Service!
  critary: Critary!
  candidatures(pagination: Pagination): [Candidature!]!
}

"""
  TODO Inputs
"""

input Pagination{
  offset: Int = 0
  limit: Int = 10
}
